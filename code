int m1=3; 
int m2=4;
int m3=6;
int m4=7;
 const int trigPin1 = 11;
const int echoPin1 = 12;
const int trigPin2 = 10;
const int echoPin2 = 13;
const int trigPin3 = 9;
const int echoPin3 = 8;
int eNA=2;
int eNB=5;
// defines variables
long duration1;
int distance1;
long duration2;
int distance2;
long duration3;
int distance3;

// defines variables
long duration;
int distance;

void setup() {
  // put your setup code here, to run once:
pinMode(m1,OUTPUT);
pinMode(m2,OUTPUT);
pinMode(m3,OUTPUT);
pinMode(m4,OUTPUT);
pinMode(trigPin1, OUTPUT); // Sets the trigPin as an Output
pinMode(echoPin1, INPUT); // Sets the echoPin as an Input
pinMode(trigPin2, OUTPUT); // Sets the trigPin as an Output
pinMode(echoPin2, INPUT);
pinMode(trigPin3, OUTPUT); // Sets the trigPin as an Output
pinMode(echoPin3, INPUT);
Serial.begin(9600);

};


void loop() 
{
  // Clears the trigPin
digitalWrite(trigPin1, LOW);

delayMicroseconds(1);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin1, HIGH);

delayMicroseconds(5);
digitalWrite(trigPin1, LOW);
duration1 = pulseIn(echoPin1, HIGH);
// Calculating the distance
distance1= (duration1*0.034)/2;
digitalWrite(trigPin2, LOW);

delayMicroseconds(1);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin2, HIGH);

delayMicroseconds(5);
digitalWrite(trigPin2, LOW);
duration2 = pulseIn(echoPin2, HIGH);
// Calculating the distance
distance2= (duration2*0.034)/2;
digitalWrite(trigPin3, LOW);

delayMicroseconds(1);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin3, HIGH);

delayMicroseconds(5);
digitalWrite(trigPin3, LOW);
duration3 = pulseIn(echoPin3, HIGH);
// Calculating the distance
distance3= (duration3*0.034)/2;

// Reads the echoPin, returns the sound wave travel time in microseconds



// Prints the distance on the Serial Monitor
Serial.print("Distance1: ");
Serial.println(distance1);
Serial.print("Distance2: ");
Serial.println(distance2);
Serial.print("Distance3: ");
Serial.println(distance3); 
if ( distance2 > 20)
  {
    straight();
  }     
else if ( distance1 <= 20 && distance3 > 20)
  {
    right();
  }
else 
  {
    left();
  }


};

void straight()
{
  digitalWrite(eNA,HIGH);
  digitalWrite(eNB,HIGH);
  digitalWrite(m1,HIGH);
  digitalWrite(m2,LOW);
  digitalWrite(m3,HIGH);
  digitalWrite(m4,LOW);
  delay(1250);
};

void left()
{
  digitalWrite(eNA,HIGH);
  digitalWrite(eNB,HIGH);
  digitalWrite(m1,LOW);
  digitalWrite(m2,LOW);
  digitalWrite(m3,HIGH);
  digitalWrite(m4,LOW);
  delay(1250);
};


void right()
{
  digitalWrite(eNA,HIGH);
  digitalWrite(eNB,HIGH);
  digitalWrite(m1,LOW);
  digitalWrite(m2,HIGH);
  digitalWrite(m3,LOW);
  digitalWrite(m4,LOW);
  delay(1250);
};
